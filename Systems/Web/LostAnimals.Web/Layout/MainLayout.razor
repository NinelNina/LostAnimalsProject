﻿@using MudBlazor
@using LostAnimals.Web.Services
@inherits LayoutComponentBase
@inject IConfigurationService ConfigurationService

<MudThemeProvider @bind-IsDarkMode="isDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>
            
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggleAsync" />
        <MudLink Href="/" Class="ml-3" Style="color: white !important; text-decoration: none;">
            <MudText Typo="Typo.h4">Lost Animals</MudText>
        </MudLink>


        <MudSpacer />
        <MudIconButton Icon="@(isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" @onclick="@ToggleDarkModeAsync" Color="Color.Inherit" Edge="Edge.End" />
        <UserMenu/>
    </MudAppBar>
    <MudDrawer @bind-Open="drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="mt-2">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
@code {
    private bool drawerOpen = true;
    private bool isDarkMode = false;

    protected override async Task OnInitializedAsync()
    {
        drawerOpen = await ConfigurationService.GetNavigationMenuVisibleAsync();
        isDarkMode = await ConfigurationService.GetDarkModeAsync();
    }

    private async Task DrawerToggleAsync()
    {
        drawerOpen = !drawerOpen;
        await ConfigurationService.SetNavigationMenuVisibleAsync(drawerOpen);
    }

    private async Task ToggleDarkModeAsync()
    {
        isDarkMode = !isDarkMode;
        await ConfigurationService.SetDarkModeAsync(isDarkMode);
    }
}