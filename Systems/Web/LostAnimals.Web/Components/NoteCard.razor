@using LostAnimals.Web.Pages.Notes.Models
@using LostAnimals.Web.Pages.Photo.Models
@using LostAnimals.Web

<MudPaper Class="pa-4 mb-4" Elevation="3">
    <MudLink Href="@($"/note/{Note.Id.ToString()}")" Class="text-decoration-none">
    <MudText Typo="Typo.h6">@Note.Title</MudText>
    </MudLink>
    <MudContainer Style="display: flex;, flex-direction: row;">
        <CategoryButtonTemplate CategoryName="@Note.CategoryName" Class="mt-2 mb-2 mr-2 mud-theme-primary" Text="@Note.CategoryName" />
        <MudButton Class="mt-2 mb-2 mud-theme-secondary">@Note.AnimalKind</MudButton>
    </MudContainer>
    <MudText Typo="Typo.subtitle2" Color="Color.Secondary">Автор: @Note.Username, @Note.CreatedDate.ToString()</MudText>
    
    @if (@Note.Content.Length > 200){
        <MudText Typo="Typo.body1" Class="mt-2">@Note.Content.Substring(0, Math.Min(Note.Content.Length, 200))... </MudText>
    }
    else
    {
        <MudText Typo="Typo.body1" Class="mt-2">@Note.Content</MudText>
    }

    @if (Note.PhotoGalleryId.HasValue)
    {
        Guid galleryId = Note.PhotoGalleryId.Value;
        if (PhotosDictionary.TryGetValue(galleryId, out var photos))
        {
            if (photos != null && photos.Any())
            {
                foreach (var photo in photos)
                {
                    <MudImage Src="@GetFullImagePath(@photo)" Alt="Animal image" Height="200" Class="mt-2 mr-2" />
                }
            }
        }
    }
    else
    {
        <MudImage Src="photo_not_found.jpg" Alt="Animal image" Height="200" Class="mt-2" />
    }
    <MudText Typo="Typo.subtitle1" Color="Color.Secondary" Class="mt-2">Комментарии: @(Note.Comments?.Count ?? 0)</MudText>
</MudPaper>

@code {
    [Parameter]
    public NoteViewModel Note { get; set; }

    [Parameter]
    public Dictionary<Guid, IEnumerable<PhotoStorageViewModel>> PhotosDictionary { get; set; }

    public string GetFullImagePath(PhotoStorageViewModel photo)
    {
        return Settings.ApiRoot + "/" + photo.PhotoName;
    }
}
